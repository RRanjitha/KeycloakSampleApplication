{"remainingRequest":"/home/admin123/Documents/sample-keycloak/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/admin123/Documents/sample-keycloak/node_modules/ts-loader/index.js??ref--10-3!/home/admin123/Documents/sample-keycloak/node_modules/angular-router-loader/src/index.js!/home/admin123/Documents/sample-keycloak/node_modules/tslint-loader/index.js!/home/admin123/Documents/sample-keycloak/src/main/webapp/app/core/auth/auth-session.service.ts","dependencies":[{"path":"/home/admin123/Documents/sample-keycloak/src/main/webapp/app/core/auth/auth-session.service.ts","mtime":1533192626944},{"path":"/home/admin123/Documents/sample-keycloak/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/admin123/Documents/sample-keycloak/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/admin123/Documents/sample-keycloak/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/home/admin123/Documents/sample-keycloak/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/admin123/Documents/sample-keycloak/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/admin123/Documents/sample-keycloak/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\nvar operators_1 = require(\"rxjs/operators\");\nvar app_constants_1 = require(\"app/app.constants\");\nvar AuthServerProvider = /** @class */ (function () {\n    function AuthServerProvider(http) {\n        this.http = http;\n    }\n    AuthServerProvider.prototype.logout = function () {\n        var _this = this;\n        // logout from the server\n        return this.http.post(app_constants_1.SERVER_API_URL + 'api/logout', {}, { observe: 'response' }).pipe(operators_1.map(function (response) {\n            // to get a new csrf token call the api\n            _this.http.get(app_constants_1.SERVER_API_URL + 'api/account').subscribe(function () { }, function () { });\n            return response;\n        }));\n    };\n    AuthServerProvider = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\n    ], AuthServerProvider);\n    return AuthServerProvider;\n    var _a;\n}());\nexports.AuthServerProvider = AuthServerProvider;\n",{"version":3,"file":"/home/admin123/Documents/sample-keycloak/src/main/webapp/app/core/auth/auth-session.service.ts","sourceRoot":"","sources":["/home/admin123/Documents/sample-keycloak/node_modules/angular-router-loader/src/index.js!/home/admin123/Documents/sample-keycloak/node_modules/tslint-loader/index.js!/home/admin123/Documents/sample-keycloak/src/main/webapp/app/core/auth/auth-session.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAAgE;AAEhE,4CAAqC;AAErC,mDAAmD;AAGnD;IACI,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,mCAAM,GAAN;QAAA,iBASC;QARG,yBAAyB;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8BAAc,GAAG,YAAY,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,IAAI,CAClF,eAAG,CAAC,UAAC,QAA2B;YAC5B,uCAAuC;YACvC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8BAAc,GAAG,aAAa,CAAC,CAAC,SAAS,CAAC,cAAO,CAAC,EAAE,cAAO,CAAC,CAAC,CAAC;YAC5E,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAZQ,kBAAkB;QAD9B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEL,iBAAU,oBAAV,iBAAU;OAD3B,kBAAkB,CAa9B;IAAD,yBAAC;;CAAA,AAbD,IAaC;AAbY,gDAAkB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SERVER_API_URL } from 'app/app.constants';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthServerProvider {\n    constructor(private http: HttpClient) {}\n\n    logout(): Observable<any> {\n        // logout from the server\n        return this.http.post(SERVER_API_URL + 'api/logout', {}, { observe: 'response' }).pipe(\n            map((response: HttpResponse<any>) => {\n                // to get a new csrf token call the api\n                this.http.get(SERVER_API_URL + 'api/account').subscribe(() => {}, () => {});\n                return response;\n            })\n        );\n    }\n}\n"]}]}